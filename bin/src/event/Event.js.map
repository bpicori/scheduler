{"version":3,"file":"Event.js","sourceRoot":"","sources":["../../../src/event/Event.ts"],"names":[],"mappings":";;AAAA,+BAA0B;AAC1B,0CAAqC;AAErC,oEAAiE;AAEjE,IAAY,WAIX;AAJD,WAAY,WAAW;IACrB,kCAAmB,CAAA;IACnB,4BAAa,CAAA;IACb,8BAAe,CAAA;AACjB,CAAC,EAJW,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAItB;AAED,MAAa,KAAK;IACT,MAAM,CAAC,SAAS,CAAC,KAAa;QACnC,MAAM,eAAe,GAAG,KAAK,CAAC,SAAS,CAAC,UAAU,EAAE,CAAC;QACrD,MAAM,aAAa,GAAG,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;QAC3C,yBAAY,KAAK,IAAE,eAAe,EAAE,aAAa,IAAG;IACtD,CAAC;IAEM,MAAM,CAAC,WAAW,CAAC,KAAU;QAClC,MAAM,SAAS,GAAG,mCAAgB,CAAC,YAAY,CAAC,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,eAAe,CAAC,CAAC;QAC5F,OAAO,IAAI,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;IACzF,CAAC;IAUD,YAAY,IAAY,EAAE,SAAiB,EAAE,MAAe,EAAE,QAAgB,EAAE,SAAqB;QACnG,IAAI,CAAC,OAAO,GAAG,SAAE,EAAE,CAAC;QACpB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,GAAG,GAAG,IAAI,aAAK,CAAC,EAAE,CAAC,CAAC;IAC3B,CAAC;CACF;AA7BD,sBA6BC","sourcesContent":["import { v4 } from 'uuid';\nimport {Queue} from '../store/Queue';\nimport { ITransport } from '../transport/Transport';\nimport { TransportFactory } from '../transport/TransportFactory';\n\nexport enum StatusEvent {\n  PENDING = 'PENDING',\n  DONE = 'DONE',\n  ERROR = 'ERROR',\n}\n\nexport class Event implements IEvent {\n  public static serialize(event: IEvent): any {\n    const transportConfig = event.transport.getConfigs();\n    const transportType = event.transport.type;\n    return { ...event, transportConfig, transportType };\n  }\n\n  public static deserialize(event: any): IEvent {\n    const transport = TransportFactory.getTransport(event.transportType, event.transportConfig);\n    return new Event(event.name, event.timestamp, event.repeat, event.interval, transport);\n  }\n\n  public eventId: string;\n  public timestamp: number;\n  public repeat: boolean;\n  public interval: number;\n  public transport: ITransport;\n  public name: string;\n  public log: Queue;\n\n  constructor(name: string, timestamp: number, repeat: boolean, interval: number, transport: ITransport) {\n    this.eventId = v4();\n    this.name = name;\n    this.timestamp = timestamp;\n    this.repeat = repeat;\n    this.interval = interval;\n    this.transport = transport;\n    this.log = new Queue(10);\n  }\n}\n\nexport interface IEvent {\n  eventId: string ;\n  timestamp: number;\n  name: string;\n  repeat: boolean;\n  interval: number;\n  transport: ITransport;\n  log: Queue;\n}\n"]}